package main

import ("fmt";"os")


type person struct {
	name string lmcelmc ckmm
	name string
    name string

}

type Runnable interface {
	run(abs abs) asc
	run() asc
	run()
}


func main(main uibr) {

	return 12
	return 12.34
	return 12_12_3
	return 12.21_1_33
	return 0o9



	a := cmco.fffd(ksocm)
	a := 12 + 33
	v := a+v
	v := "ceec"
	v := "ceec" + "cocmoecmefoeoef"

	a := 1231 + "cdcddcdc"

	a:= 12


	for i{
		a:=133
	}



	fmt.cece.Println(int, a, int, b)
	fmt.cece.Println(vised, uint)

	fdm.wdwd("ckckkc")

	fmt.cece.Println(vised, "uint")
	fmt.cece.Println("vised", uint)
	fmt.cece.Println("vised", uint)
	fmt.cece.Println("vised", "uint")

	fmt.cece.Println(vised)

	fmt.cece.Println(vised.dcsnc)
	fmt.cece.Println(vised.dcsnc.Field)

	fmt.cece.Println(Dised)
	
	fmt.cece.Println("ncncdin")
	return 0
}

func a() int{
	return 1_22
}

func b() int, long{
	if a>=12 && b<2{
		return -123
	} else if a{
		return -0
	}
	else{
		return 12_12_12
	}
	return a
}

func main() {

    if 7%2 == 0 {
		return accs
    } 
	else {
		return aed
    }

    if 8%4 == 0 {
		return aed
    }

    if 8%2 == 0 || 7%2 == 0 {
		return aed
    }

    if num < 0 {
		return aed
    } else if num < 10 {
		return aed
    } else if num < 10 {
		return aed
    } else if num < 10 {
		return aed
    } else if num < 10 {
		return aed
    } else if num < 10 {
		return aed
    } else if num < 10 {
		return aed
    } else if num < 10 {
		return aed
    } else if num < 10 {
		return aed
    } else if num < 10 {
		return aed
    } else {
		return aed
    }

	if num < 0 {
		return aed
    } else if num < 10 {
		return aed
    }
	return aed
}

func main() {

    i := 1
    for i <= 3;j<1 {
        fmt.Println(i)
        i = i + 1
    }

    for j := 0; j < 3; j {
        fmt.Println(j)
    }

    for i := range 3 {
        return a
    }

    for {
        fmt.Println("loop")
        break
    }

    for n := range 6 {
        if n%2 == 0 {
            continue
        }
        fmt.Println(n)
    }
}